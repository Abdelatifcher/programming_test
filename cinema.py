# -*- coding: utf-8 -*-
"""cinema

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cqe0PkEOZiiKrQMFgNJXLhDorC4hRwAJ

## Cinema : csv

I used the scrapping technique with a tool called data miner scrap , then I recovered the resulting file.
The purpose of the following treatment is to separate titles and years
"""

CSV = pd.read_csv('/content/test_t.csv')
Title_years = CSV['Title']

titles = []
years  = []
for i in range(0,100):
  titles.append(Title_years[i].rsplit('(', 1)[0])
  id2 = Title_years[i].index("(")
  id3 = Title_years[i].index(")")
  years.append(Title_years[i][id2 + len("") + 1: id3])

years = pd.DataFrame(data = (years) , columns=['years'])
titles = pd.DataFrame(data = (titles) , columns=['titles'])
CSVV= titles.merge(years, how='left',right_index= True , left_index=True)
CSV = CSV.drop(['Title'],axis =1)
CSV_f = CSVV.merge(CSV, how='left',right_index= True , left_index=True)

CSV_f

"""HTML : First approche (USED)"""

CSV_f.to_html("Table.html") 
# assign it to a
# variable (string)
html_file = CSV_f.to_html()

"""HTML : Second approche"""

import requests
from bs4 import BeautifulSoup
from lxml import etree
url = 'https://www.listchallenges.com/100-must-see-movies-for-more-advanced-cinephiles/vote'
response = requests.get(url)
soup = BeautifulSoup(response.text ,'html.parser')
html  = soup.findAll("tr")
Html_file= open("testt","w")
Html_file.write(str(html))
Html_file.close()
